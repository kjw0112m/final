<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="order">
	<select id="list" parameterType="map" resultType="orderViewDto">
		select * from (
		<![CDATA[
			select rownum rn, O.* from(
				select * from order_view
		]]>
		where 1=1
		<if test="vo.size() > 0 ">
			and
			<foreach collection="vo" separator="and" item="item" open="("
				close=")">
				${item.type} like '%' || #{item.keyword} || '%'
			</foreach>
		</if>
		<if test="dto.start_dt != null and dto.end_dt !=null">
			and
			order_dt between to_date(#{dto.start_dt},
			'YYYY-MM-DD') and to_date(#{dto.end_dt}, 'YYYY-MM-DD') + 0.99999
		</if>
		<if test="dto.product_name != null">
			and
			product_name like '%' || #{dto.product_name} ||
			'%'
		</if>
		<if test="dto.pay_status != null and !dto.pay_status.isEmpty()">
			and
			pay_status = #{dto.pay_status}
		</if>
		<if test="tStatus != null">
				and
			<foreach collection="tStatus" separator="or" item="tStat"
				open="(" close=")">
				t_status = #{tStat}
			</foreach>
		</if>
		<if test="csStatus != null">
				and
			<foreach collection="csStatus" separator="or" item="csStat"
				open="(" close=")">
				cs_status = #{csStat}
			</foreach>
		</if>
		<if test="dto.member_id != null">
			and
			member_id = #{dto.member_id}
		</if>
		<if test="dto.seller_id != null">
			and
			seller_id = #{dto.seller_id}
		</if>
		)O
		<![CDATA[
		) where rn >= #{start} and rn <= #{end}
		]]>
	</select>

	<select id="count" parameterType="map" resultType="int">
		select count(*) from order_view where 1=1
		<if test="vo.size() > 0">
			and
			<foreach collection="vo" separator="and" item="item" open="("
				close=")">
				${item.type} like '%' || #{item.keyword} || '%'
			</foreach>
		</if>
		<if test="dto.pay_status != null and !dto.pay_status.isEmpty()">
			and
			pay_status = #{dto.pay_status}
		</if>
		<if test="dto.start_dt != null and dto.end_dt !=null">
			and
			order_dt between to_date(#{dto.start_dt},
			'YYYY-MM-DD') and to_date(#{dto.end_dt}, 'YYYY-MM-DD') + 0.99999
		</if>
		<if test="dto.product_name != null">
			and
			product_name like '%' || #{dto.product_name} ||
			'%'
		</if>
		<if test="tStatus != null">
				and
			<foreach collection="tStatus" separator="or" item="tStat"
				open="(" close=")">
				t_status = #{tStat}
			</foreach>
		</if>
		<if test="csStatus != null">
				and
			<foreach collection="csStatus" separator="or" item="csStat"
				open="(" close=")">
				cs_status = #{csStat}
			</foreach>
		</if>
		<if test="dto.seller_id != null">
			and
			seller_id = #{dto.seller_id}
		</if>
	</select>

	<select id="seq" resultType="int">
		select orders_seq.nextval from dual
	</select>

	<insert id="insert" parameterType="ordersDto">
		insert into orders values(
		to_char(sysdate,
		'YYYYMMDDHH24MISS') || ${id},
		#{id},
		#{product_id}, #{member_id}, 
		null,
		#{quantity}, sysdate,
		#{pay_type},
		#{total_price}, 0, #{pay_status}, null, null,
		null,
		<choose>
			<when test="team == null">
				to_char(sysdate,'YYYYMMDDHH24MISS')||${id},
			</when>
			<otherwise>
				#{team},
			</otherwise>
		</choose>
		#{sizes},
		#{re_name},
		#{re_addr},
		#{re_phone}
		)
	</insert>

	<update id="createSequence">
		create sequence orders_seq
		start with 1000
		maxvalue
		9999
		minvalue 1000
	</update>

	<delete id="dropSequence">
		drop sequence orders_seq
	</delete>

	<delete id="delete">
		delete orders where order_dt between
		sysdate-(INTERVAL '2' YEAR) and sysdate-(INTERVAL '1' YEAR)-(INTERVAL '1' MINUTE)
	</delete>

	<update id="cs_status" parameterType="ordersDto">
		update orders set
		cs_status
		= #{cs_status}
		where team=#{team}
	</update>

	<update id="status" parameterType="ordersDto">
		update orders set
		status =
		#{status}
		where team=#{team}
	</update>

	<update id="invoice" parameterType="ordersDto">
		update orders set t_invoice =
		#{t_invoice}, t_id = #{t_id} where team=#{team}
	</update>

	<select id="getTeam" parameterType="string"
		resultType="orderViewDto">
		select * from order_view where team = #{team}
	</select>
	
	<select id="getOrderId" parameterType="int" resultType="string">
		select order_id from orders where to_char(order_dt, 'YYYYMMDD') = TO_CHAR(SYSDATE, 'YYYYMMDD') and id=#{id}	
	</select>
</mapper>



 






